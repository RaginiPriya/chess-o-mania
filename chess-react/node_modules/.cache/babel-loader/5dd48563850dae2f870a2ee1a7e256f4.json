{"ast":null,"code":"import _objectSpread from\"/Users/ragir/Documents/chess/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/ragir/Documents/chess/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ragir/Documents/chess/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ragir/Documents/chess/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ragir/Documents/chess/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import generateSquares from'./generateSquares';import getPieces from'./getPieces';import Square from'./Square';import Piece from'./Piece';import checkMove from'./checkMove';import NavBar from'./NavBar';import{Redirect}from'react-router-dom';import{Modal,Button,Image}from'react-bootstrap';import whiteQueen from'./images/white_queen.png';import blackQueen from'./images/black_queen.png';import whiteBishop from'./images/white_bishop.png';import blackBishop from'./images/black_bishop.png';import whiteKnight from'./images/white_knight.png';import blackKnight from'./images/black_knight.png';import whiteRook from'./images/white_rook.png';import blackRook from'./images/black_rook.png';import ChessPiece from'./ChessPiece';import{connect}from'react-redux';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(){var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={kingInCheck:false,kingInCheckMate:false,kingInStaleMate:false,willPutKingInCheck:false,squares:generateSquares(_this.props.location.state.color==='white'?false:true),pieces:getPieces(),myTurn:_this.props.location.state.color==='white'?true:false,showQuitModal:false,redirect:false,showPieceSwapModal:false,pieceToSwap:null,squareToSwap:null,player1:0,player2:0,won:false,draw:false,gameId:_this.props.location.state.gameId};_this.hide=function(){_this.setState({showQuitModal:false,showPieceSwapModal:false});};_this.redirect=function(){_this.setState({redirect:true});};_this.listenForCheck=function(){var king=_this.state.squares.find(function(square){return square.piece&&square.piece.piece==='king'&&square.piece.color===_this.props.location.state.color;});var attackingPiece=_this.state.squares.find(function(square){return square.piece&&checkMove(square.piece,square,king.piece,king,_this.state.squares);});return attackingPiece?true:false;};_this.isCheckMate=function(color){var isKingUnderAttack=_this.listenForCheck();if(isKingUnderAttack){_this.setState({kingInCheck:true});}var mySquares=_this.state.squares.filter(function(square){return square.piece&&square.piece.color===color;});var hero=mySquares.find(function(mySquare){var destSquare=_this.state.squares.find(function(square){var movePossible=checkMove(mySquare.piece,mySquare,square.piece,square,_this.state.squares,isKingUnderAttack);if(movePossible){var willPutInCheck=false;var piece=square.piece;if(piece){piece.row=null;piece.column=null;}square.piece=mySquare.piece;square.piece.row=square.row;square.piece.column=square.column;mySquare.piece=null;var isCheck=_this.listenForCheck();if(isCheck){willPutInCheck=true;}mySquare.piece=square.piece;square.piece=piece;mySquare.piece.row=mySquare.row;mySquare.piece.column=mySquare.column;if(piece){piece.row=square.row;piece.column=square.column;}return!willPutInCheck;}return false;});return destSquare?true:false;});if(isKingUnderAttack&&!hero){_this.setState({kingInCheckMate:true});clearInterval(_this.myTimer);_this.socket.send(JSON.stringify({'type':'won',gameId:_this.state.gameId}));}else if(!isKingUnderAttack&&!hero){_this.setState({kingInStaleMate:true});clearInterval(_this.myTimer);_this.socket.send(JSON.stringify({'type':'draw',gameId:_this.state.gameId}));}};_this.move=function(selectedPiece,selectedSquare,piece,square){_this.setState({willPutKingInCheck:false});var movePossible=checkMove(selectedPiece,selectedSquare,piece,square,_this.state.squares,_this.state.kingInCheck);if(movePossible){square.piece=selectedPiece;selectedPiece.row=square.row;selectedPiece.column=square.column;if(piece){piece.row=null;piece.column=null;}selectedSquare.piece=null;var isCheck=_this.listenForCheck();if(isCheck){square.piece=piece;selectedPiece.row=selectedSquare.row;selectedPiece.column=selectedSquare.column;if(piece){piece.row=square.row;piece.column=square.column;}selectedSquare.piece=selectedPiece;_this.setState({willPutKingInCheck:true});}else{if(selectedPiece.piece==='rook'||selectedPiece.piece==='pawn'||selectedPiece.piece==='king'){selectedPiece.hasMoved=true;}var isCastling=false;if(selectedSquare.isCastling){var rookSquare=_this.state.squares.find(function(availableSquare){return availableSquare.isCastling&&availableSquare.piece&&availableSquare.piece.piece==='rook';});var rook=rookSquare.piece;var moveRookTo=_this.state.squares.find(function(availableSquare){return availableSquare.row===rookSquare.row&&availableSquare.column===(rookSquare.column===1?rookSquare.column+3:rookSquare.column-2);});moveRookTo.piece=rook;rook.row=moveRookTo.row;rook.column=moveRookTo.column;rookSquare.piece=null;rook.hasMoved=true;rookSquare.isCastling=false;selectedSquare.isCastling=false;isCastling=true;}if(_this.state.kingInCheck){_this.setState({kingInCheck:false});}if(selectedPiece.piece==='pawn'&&square.row===(_this.props.location.state.color==='white'?1:8)){_this.setState({showPieceSwapModal:true,squareToSwap:square});}else{clearInterval(_this.myTimer);_this.opponentTimer=setInterval(function(){_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player2:prevState.player2+1});});},1000);console.log('ragini '+_this.state.gameId);_this.socket.send(JSON.stringify({type:\"move\",gameId:_this.state.gameId,fromSquare:{row:selectedSquare.row,column:selectedSquare.column},isCastling:isCastling,toSquare:{row:square.row,column:square.column},myColor:_this.props.location.state.color}));}_this.setState({myTurn:false});selectedPiece.selected=false;selectedSquare.selected=false;}}selectedPiece.selected=false;selectedSquare.selected=false;_this.setState(function(prevState){return _objectSpread({},prevState);});};_this.selectPiece=function(square,piece){square.selected=true;piece.selected=true;_this.setState(_this.state);};_this.swapPiece=function(pieceImage,index){var square=_this.state.squareToSwap;var pawn=square.piece;pawn.row=null;pawn.column=null;var pieceType=['queen','bishop','knight','rook'];var piece=new ChessPiece(pieceType[index],_this.props.location.state.color,square.row,square.column,pieceImage);square.piece=piece;piece.row=square.row;piece.column=square.column;var pieces=_this.state.pieces;pieces.push(piece);_this.setState({pieces:pieces,squares:_this.state.squares});_this.hide();clearInterval(_this.myTimer);_this.opponentTimer=setInterval(function(){_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player2:prevState.player2+1});});},1000);_this.socket.send(JSON.stringify({type:\"swap\",gameId:_this.state.gameId,index:index,square:{row:square.row,column:square.column},myColor:_this.props.location.state.color}));};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(this.props.location.state);// this.socket = new WebSocket(\"ws://localhost:8000/game/\"+this.props.location.state.gameId+\"?userId=\"+this.props.location.state.userId)\nthis.socket=this.props.socket;this.socket.onmessage=function(input){var data=JSON.parse(input.data);if(data.type==='quit'&&!_this2.state.kingInCheckMate){_this2.setState({showQuitModal:true});}if(data.type==='swap'){var index=data.index,square=data.square,myColor=data.myColor;var opponentPieceArray=myColor==='white'?[whiteQueen,whiteBishop,whiteKnight,whiteRook]:[blackQueen,blackBishop,blackKnight,blackRook];var pawnFromSquare=_this2.state.squares.find(function(sq){return sq.column===square.column&&sq.row===(_this2.props.location.state.color==='black'?2:7);});var pawn=pawnFromSquare.piece;pawn.row=null;pawn.column=null;var pieceType=['queen','bishop','knight','rook'];var piece=new ChessPiece(pieceType[index],myColor,square.row,square.column,opponentPieceArray[index]);var pawnToSquare=_this2.state.squares.find(function(sq){return sq.column===square.column&&sq.row===square.row;});pawnToSquare.piece=piece;piece.row=pawnToSquare.row;piece.column=pawnToSquare.column;var pieces=_this2.state.pieces;pieces.push(piece);_this2.setState({pieces:pieces,squares:_this2.state.squares,myTurn:true});clearInterval(_this2.opponentTimer);_this2.myTimer=setInterval(function(){_this2.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player1:prevState.player1+1});});},1000);}if(data.type==='won'||data.type==='draw'){clearInterval(_this2.opponentTimer);if(data.endgame==='won'){_this2.setState({\"won\":true});}else if(data.endgame==='draw'){_this2.setState({\"draw\":true});}}if(data.type==='move'){var fromSquare=data.fromSquare,toSquare=data.toSquare,isCastling=data.isCastling;var from=_this2.state.squares.find(function(square){return square.row===fromSquare.row&&square.column===fromSquare.column;});var to=_this2.state.squares.find(function(square){return square.row===toSquare.row&&square.column===toSquare.column;});if(from.piece.piece==='rook'||from.piece.piece==='pawn'||from.piece.piece==='king'){from.piece.hasMoved=true;}if(to.piece){to.piece.row=null;to.piece.column=null;}to.piece=from.piece;from.piece=null;to.piece.row=to.row;to.piece.column=to.column;if(isCastling){var rookSquare=_this2.state.squares.find(function(square){return square.piece&&square.piece.piece==='rook'&&square.column===(fromSquare.column>toSquare.column?1:8)&&square.row===fromSquare.row;});var rook=rookSquare.piece;var moveRookTo=_this2.state.squares.find(function(availableSquare){return availableSquare.row===rookSquare.row&&availableSquare.column===(rookSquare.column===1?rookSquare.column+3:rookSquare.column-2);});moveRookTo.piece=rook;rook.row=moveRookTo.row;rook.column=moveRookTo.column;rookSquare.piece=null;}_this2.setState({squares:_this2.state.squares,pieces:_this2.state.pieces,myTurn:true});clearInterval(_this2.opponentTimer);_this2.myTimer=setInterval(function(){_this2.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player1:prevState.player1+1});});},1000);_this2.isCheckMate(_this2.props.location.state.color);}};if(this.props.location.state.color==='white'){this.myTimer=setInterval(function(){_this2.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player1:prevState.player1+1});});},1000);}else{this.opponentTimer=setInterval(function(){_this2.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{player2:prevState.player2+1});});},1000);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// this.socket.send(JSON.stringify({\"type\":\"quit\",gameId: this.state.gameId}))\nconsole.log(\"socket closed\");this.socket.close();}},{key:\"render\",value:function render(){var _this3=this;var pieceArray=this.props.location.state.color==='white'?[whiteQueen,whiteBishop,whiteKnight,whiteRook]:[blackQueen,blackBishop,blackKnight,blackRook];var myName=this.props.location.state.player2?this.props.location.state.userId:'You';var opponentName=this.props.location.state.player2?this.props.location.state.player2:'Opponent';var opponentColor=this.props.location.state.color==='white'?'black':'white';var player1Name=myName;var player2Name=opponentName;return/*#__PURE__*/ (// <div style={{backgroundColor: 'white'}}>\nReact.createElement(\"div\",null,this.state.redirect?/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}):null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"Game\"},/*#__PURE__*/React.createElement(\"h1\",null,\"what a wonderful nice day it is to be playing like this in this summer full of rains and rainbows\"),/*#__PURE__*/React.createElement(\"div\",{className:\"Board\"},/*#__PURE__*/React.createElement(Square,{squares:this.state.squares,move:this.move,pieces:this.state.pieces,myTurn:this.state.myTurn}),/*#__PURE__*/React.createElement(Piece,{pieces:this.state.pieces,squares:this.state.squares,move:this.move,selectPiece:this.selectPiece,myTurn:this.state.myTurn,color:this.props.location.state.color}))),/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,keyboard:false,show:this.state.showQuitModal||this.state.kingInCheckMate||this.state.draw||this.state.won,onHide:this.hide,className:\"my-modal\",size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true,hidden:\"true\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",null,'GAME OVER!'+(this.state.showQuitModal?' Opponent Quit':this.state.kingInCheckMate?' Your King has been captured':this.state.draw?' DRAW':' YOU WON !!')),/*#__PURE__*/React.createElement(Button,{onClick:this.redirect,className:\"button\",style:{backgroundColor:'black',border:'1px solid black',width:'150px',marginTop:'20px'}},\"HOME\")))),/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,keyboard:false,show:this.state.showPieceSwapModal,onHide:this.hide,className:\"my-modal\",size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true,hidden:\"true\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",null,\"Select the piece to swap\"),pieceArray.map(function(piece,index){return/*#__PURE__*/React.createElement(\"span\",{style:{display:'inline-block',height:'20vh',width:'20vh',border:'3px solid black'},onClick:function onClick(){return _this3.swapPiece(piece,index);}},/*#__PURE__*/React.createElement(\"img\",{style:{height:'20vh'},src:piece,alt:\"piece\"}));}))))));}}]);return Game;}(Component);var mapStateToProps=function mapStateToProps(state){return{socket:state.websocketReducer.socket,user:state.userReducer};};export default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess api/chess-online/chess-react/src/Game.js"],"names":["React","Component","generateSquares","getPieces","Square","Piece","checkMove","NavBar","Redirect","Modal","Button","Image","whiteQueen","blackQueen","whiteBishop","blackBishop","whiteKnight","blackKnight","whiteRook","blackRook","ChessPiece","connect","Game","state","kingInCheck","kingInCheckMate","kingInStaleMate","willPutKingInCheck","squares","props","location","color","pieces","myTurn","showQuitModal","redirect","showPieceSwapModal","pieceToSwap","squareToSwap","player1","player2","won","draw","gameId","hide","setState","listenForCheck","king","find","square","piece","attackingPiece","isCheckMate","isKingUnderAttack","mySquares","filter","hero","mySquare","destSquare","movePossible","willPutInCheck","row","column","isCheck","clearInterval","myTimer","socket","send","JSON","stringify","move","selectedPiece","selectedSquare","hasMoved","isCastling","rookSquare","availableSquare","rook","moveRookTo","opponentTimer","setInterval","prevState","console","log","type","fromSquare","toSquare","myColor","selected","selectPiece","swapPiece","pieceImage","index","pawn","pieceType","push","onmessage","input","data","parse","opponentPieceArray","pawnFromSquare","sq","pawnToSquare","endgame","from","to","close","pieceArray","myName","userId","opponentName","opponentColor","player1Name","player2Name","textAlign","backgroundColor","border","width","marginTop","map","display","height","mapStateToProps","websocketReducer","user","userReducer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport generateSquares from './generateSquares'\nimport getPieces from './getPieces'\nimport Square from './Square'\nimport Piece from './Piece'\nimport checkMove from './checkMove'\nimport NavBar from './NavBar'\nimport { Redirect } from 'react-router-dom';\nimport {Modal, Button, Image} from 'react-bootstrap'\nimport whiteQueen from './images/white_queen.png';\nimport blackQueen from './images/black_queen.png'\nimport whiteBishop from './images/white_bishop.png';\nimport blackBishop from './images/black_bishop.png'\nimport whiteKnight from './images/white_knight.png';\nimport blackKnight from './images/black_knight.png'\nimport whiteRook from './images/white_rook.png';\nimport blackRook from './images/black_rook.png'\nimport ChessPiece from './ChessPiece'\nimport { connect } from 'react-redux';\n\nclass Game extends Component{\n    state = {\n        kingInCheck : false,\n        kingInCheckMate : false,\n        kingInStaleMate : false,\n        willPutKingInCheck : false,\n        squares :  generateSquares(this.props.location.state.color === 'white' ? false : true),\n        pieces :  getPieces(),\n        myTurn :  this.props.location.state.color === 'white' ? true : false,\n        showQuitModal : false,\n        redirect : false,\n        showPieceSwapModal : false,\n        pieceToSwap: null,\n        squareToSwap: null,\n        player1 : 0,\n        player2 : 0,\n        won : false,\n        draw : false,\n        gameId : this.props.location.state.gameId\n    }\n\n    hide = () => {\n        this.setState({showQuitModal : false, showPieceSwapModal:false})\n    }\n\n    redirect = () => {\n        this.setState({redirect : true})\n    }\n\n    componentDidMount(){\n        console.log(this.props.location.state)\n        // this.socket = new WebSocket(\"ws://localhost:8000/game/\"+this.props.location.state.gameId+\"?userId=\"+this.props.location.state.userId)\n        this.socket = this.props.socket\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data)\n            if(data.type === 'quit' && !this.state.kingInCheckMate){\n                this.setState({showQuitModal: true})\n            }\n            if(data.type === 'swap'){\n                const {index, square, myColor} = data\n                const opponentPieceArray = myColor === 'white' ? [whiteQueen,whiteBishop,whiteKnight,whiteRook] :\n                [blackQueen,blackBishop,blackKnight,blackRook]\n\n                const pawnFromSquare = this.state.squares.find((sq) => { return sq.column === square.column && sq.row === (this.props.location.state.color === 'black' ? 2 : 7)})\n                const pawn = pawnFromSquare.piece\n                pawn.row = null\n                pawn.column = null\n                const pieceType = ['queen','bishop','knight','rook']\n                const piece = new ChessPiece(pieceType[index],myColor, square.row, square.column, opponentPieceArray[index])  \n                const pawnToSquare = this.state.squares.find((sq) => { return sq.column === square.column && sq.row === square.row})\n                pawnToSquare.piece = piece\n                piece.row = pawnToSquare.row\n                piece.column = pawnToSquare.column\n                const pieces = this.state.pieces\n                pieces.push(piece)\n                this.setState({pieces : pieces , squares : this.state.squares, myTurn: true});\n\n                clearInterval(this.opponentTimer)\n                this.myTimer = setInterval(() => {\n                    this.setState(prevState =>{\n                        return{\n                             ...prevState,\n                             player1 : prevState.player1 +1\n                        }\n                    })\n                }, 1000)\n\n            }\n\n            if(data.type === 'won' || data.type === 'draw'){\n                clearInterval(this.opponentTimer)\n                if(data.endgame === 'won'){\n                    this.setState({\"won\": true})\n                }\n                else if(data.endgame === 'draw'){\n                    this.setState({\"draw\": true})\n                }\n            }\n\n            if(data.type === 'move'){\n                const {fromSquare, toSquare, isCastling} = data\n                const from = this.state.squares.find((square) => {\n                    return square.row === fromSquare.row  && square.column === fromSquare.column\n                })\n                const to = this.state.squares.find((square) => {\n                    return square.row === toSquare.row  && square.column === toSquare.column\n                })\n                if(from.piece.piece === 'rook' || from.piece.piece === 'pawn' || from.piece.piece === 'king'){\n                    from.piece.hasMoved = true\n                }\n                if(to.piece){\n                    to.piece.row = null\n                    to.piece.column = null\n                }\n                to.piece = from.piece\n                from.piece = null\n                to.piece.row = to.row\n                to.piece.column = to.column\n                if(isCastling){\n                    const rookSquare = this.state.squares.find((square) => {\n                        return (\n                            square.piece && square.piece.piece === 'rook' && \n                            (square.column === (fromSquare.column > toSquare.column ? 1 : 8)) &&\n                            square.row === fromSquare.row\n                        )\n                    })\n                    const rook = rookSquare.piece\n                    const moveRookTo = this.state.squares.find((availableSquare) => {\n                        return (\n                            availableSquare.row === rookSquare.row && \n                            availableSquare.column === (rookSquare.column === 1 ? rookSquare.column + 3 : rookSquare.column - 2)\n                        )\n                    })\n                    moveRookTo.piece = rook\n                    rook.row = moveRookTo.row\n                    rook.column = moveRookTo.column\n                    rookSquare.piece = null\n                }\n                this.setState({squares: this.state.squares, pieces: this.state.pieces, myTurn: true})\n                clearInterval(this.opponentTimer)\n                this.myTimer = setInterval(() => {\n                    this.setState(prevState =>{\n                        return{\n                             ...prevState,\n                             player1 : prevState.player1 +1\n                        }\n                    })\n                }, 1000)\n                this.isCheckMate(this.props.location.state.color)                \n            }            \n        }\n\n        if(this.props.location.state.color === 'white'){\n            this.myTimer = setInterval(() => {\n                this.setState(prevState =>{\n                    return{\n                         ...prevState,\n                         player1 : prevState.player1 +1\n                    }\n                })\n            }, 1000)\n        }\n        else {\n            this.opponentTimer = setInterval(() => {\n                this.setState(prevState =>{\n                    return{\n                         ...prevState,\n                         player2 : prevState.player2 +1\n                    }\n                })\n            }, 1000)\n        }        \n    }\n\n    componentWillUnmount() {\n        // this.socket.send(JSON.stringify({\"type\":\"quit\",gameId: this.state.gameId}))\n        console.log(\"socket closed\")\n        this.socket.close()\n    }\n\n    listenForCheck = () => {\n        const king = this.state.squares.find((square) => {\n            return square.piece && square.piece.piece === 'king'  && square.piece.color === this.props.location.state.color\n        })\n        const attackingPiece = this.state.squares.find((square) => {\n            return square.piece && checkMove(square.piece, square, king.piece, king, this.state.squares)\n        })\n        return (attackingPiece ? true : false)\n    }\n\n    isCheckMate = (color) => {\n        const isKingUnderAttack = this.listenForCheck()\n        if(isKingUnderAttack){\n            this.setState({kingInCheck:true})\n        }   \n            \n        const mySquares = this.state.squares.filter((square) => {\n            return square.piece && square.piece.color === color\n        })\n\n        const hero = mySquares.find((mySquare) => {\n            const destSquare = this.state.squares.find((square) => {\n                const movePossible = checkMove(mySquare.piece, mySquare, square.piece, square, this.state.squares, isKingUnderAttack)\n                if(movePossible){\n                    var willPutInCheck = false\n                    const piece = square.piece\n                    if(piece){\n                        piece.row = null\n                        piece.column = null\n                    }\n                    square.piece = mySquare.piece\n                    square.piece.row = square.row\n                    square.piece.column = square.column\n                    mySquare.piece = null                \n                    const isCheck = this.listenForCheck()\n                    if(isCheck){\n                        willPutInCheck = true\n                    }\n                    mySquare.piece = square.piece\n                    square.piece = piece\n                    mySquare.piece.row = mySquare.row\n                    mySquare.piece.column = mySquare.column\n                    if(piece){\n                        piece.row = square.row\n                        piece.column = square.column\n                    }\n                    return !willPutInCheck\n                }\n                return false\n            })\n            return (destSquare ? true : false)\n        })\n        if(isKingUnderAttack && !hero){\n            this.setState({kingInCheckMate: true})\n            clearInterval(this.myTimer)\n            this.socket.send(JSON.stringify({'type':'won',gameId: this.state.gameId}))\n        }\n        else if(!isKingUnderAttack && !hero){\n            this.setState({kingInStaleMate: true})\n            clearInterval(this.myTimer)\n            this.socket.send(JSON.stringify({'type':'draw',gameId: this.state.gameId}))\n        }\n    }\n\n    move = (selectedPiece, selectedSquare, piece, square) => {\n        this.setState({willPutKingInCheck: false})\n        const movePossible = checkMove(selectedPiece, selectedSquare, piece, square, this.state.squares, this.state.kingInCheck)\n        if(movePossible){                \n            square.piece = selectedPiece\n            selectedPiece.row = square.row\n            selectedPiece.column = square.column\n            if(piece){\n                piece.row = null\n                piece.column = null\n            }\n            selectedSquare.piece = null\n            const isCheck = this.listenForCheck()\n            if(isCheck){\n                square.piece = piece\n                selectedPiece.row = selectedSquare.row\n                selectedPiece.column = selectedSquare.column\n                if(piece){\n                    piece.row = square.row\n                    piece.column = square.column\n                }\n                selectedSquare.piece = selectedPiece\n                this.setState({willPutKingInCheck: true})                \n            }\n            else{\n                if(selectedPiece.piece === 'rook' || selectedPiece.piece === 'pawn' || selectedPiece.piece === 'king'){\n                    selectedPiece.hasMoved = true\n                }\n                var isCastling = false\n                if(selectedSquare.isCastling){\n                    const rookSquare = this.state.squares.find((availableSquare) => {\n                        return availableSquare.isCastling && availableSquare.piece && availableSquare.piece.piece === 'rook'\n                    })\n                    const rook = rookSquare.piece\n                    const moveRookTo = this.state.squares.find((availableSquare) => {\n                        return (\n                            availableSquare.row === rookSquare.row && \n                            availableSquare.column === (rookSquare.column === 1 ? rookSquare.column + 3 : rookSquare.column - 2)\n                        )\n                    })\n                    moveRookTo.piece = rook\n                    rook.row = moveRookTo.row\n                    rook.column = moveRookTo.column\n                    rookSquare.piece = null\n                    rook.hasMoved = true\n                    rookSquare.isCastling = false\n                    selectedSquare.isCastling = false\n                    isCastling = true\n                }\n                if(this.state.kingInCheck){\n                    this.setState({kingInCheck:false})\n                }\n                if(selectedPiece.piece === 'pawn' && square.row === (this.props.location.state.color === 'white' ? 1 : 8)){\n                    this.setState({showPieceSwapModal: true,squareToSwap: square})\n                }\n                else{\n                    clearInterval(this.myTimer)\n                    this.opponentTimer = setInterval(() => {\n                        this.setState(prevState =>{\n                            return{\n                                 ...prevState,\n                                 player2 : prevState.player2 +1\n                            }\n                        })\n                    }, 1000)\n                    console.log('ragini '+this.state.gameId)\n                    this.socket.send(JSON.stringify({type:\"move\", gameId: this.state.gameId, fromSquare: {row: selectedSquare.row , column: selectedSquare.column}, isCastling: isCastling, toSquare: {row: square.row, column: square.column}, myColor: this.props.location.state.color }))\n                }\n                this.setState({myTurn: false})\n                selectedPiece.selected = false\n                selectedSquare.selected = false\n            }            \n        }\n        selectedPiece.selected = false\n        selectedSquare.selected = false\n        this.setState(prevState => {\n            return {\n              ...prevState\n            };\n        });\n    }\n\n    selectPiece = (square, piece) => {\n        square.selected = true\n        piece.selected = true\n        this.setState(this.state)\n    }\n\n    swapPiece = (pieceImage, index) => {\n        const square = this.state.squareToSwap\n        const pawn = square.piece\n        pawn.row = null\n        pawn.column = null\n        const pieceType = ['queen','bishop','knight','rook']\n        const piece = new ChessPiece(pieceType[index],this.props.location.state.color, square.row, square.column, pieceImage)  \n        square.piece = piece\n        piece.row = square.row\n        piece.column = square.column\n        const pieces = this.state.pieces\n        pieces.push(piece)\n        this.setState({pieces : pieces , squares : this.state.squares});\n        this.hide()\n        clearInterval(this.myTimer)\n        this.opponentTimer = setInterval(() => {\n            this.setState(prevState =>{\n                return{\n                     ...prevState,\n                     player2 : prevState.player2 +1\n                }\n            })\n        }, 1000)\n        this.socket.send(JSON.stringify({type:\"swap\", gameId: this.state.gameId,  index: index, square: {row: square.row, column: square.column}, myColor: this.props.location.state.color}))\n    }\n\n    render(){\n        const pieceArray = this.props.location.state.color === 'white' ? [whiteQueen,whiteBishop,whiteKnight,whiteRook] :\n            [blackQueen,blackBishop,blackKnight,blackRook]\n\n        const myName = this.props.location.state.player2 ? this.props.location.state.userId : 'You'\n        const opponentName = this.props.location.state.player2 ? this.props.location.state.player2 : 'Opponent'\n        const opponentColor = this.props.location.state.color === 'white' ? 'black' : 'white'\n        const player1Name =  myName\n        const player2Name = opponentName\n\n        return(            \n            // <div style={{backgroundColor: 'white'}}>\n            <div>\n                {this.state.redirect ? <Redirect to=\"/\" /> : null}\n\n                {/* <NavBar showQuit = \"true\"/> */}\n\n                {/* <div>\n                    <div style={{textAlign:'center',width:'20%',position:'fixed',right:'5%',top:'75%',backgroundColor:this.props.location.state.color, border:'5px solid grey', borderRadius:'5px'}}>\n                        <h5 style={{color:opponentColor}}>{player1Name}</h5>\n                        <h5 style={{color:opponentColor}}>{new Date(this.state.player1 * 1000).toISOString().substr(11, 8)}</h5>\n                    </div>\n                    <div style={{textAlign:'center',width:'20%',position:'fixed',left:'5%',top:'20%',backgroundColor:opponentColor, border:'5px solid grey', borderRadius:'5px'}}>\n                        <h5 style={{color:this.props.location.state.color}}>{player2Name}</h5>\n                        <h5 style={{color:this.props.location.state.color}}>{new Date(this.state.player2 * 1000).toISOString().substr(11, 8)}</h5>\n                    </div>\n                </div> */}\n\n                <div>\n                    \n                    \n                </div>\n            \n                <div className=\"Game\">\n                <h1>what a wonderful nice day it is to be playing like this in this summer full of rains and rainbows</h1>\n                    <div className=\"Board\">                    \n                        <Square \n                            squares={this.state.squares} \n                            move={this.move} \n                            pieces={this.state.pieces}\n                            myTurn={this.state.myTurn}\n                        />\n                        <Piece \n                            pieces={this.state.pieces} \n                            squares={this.state.squares} \n                            move={this.move} \n                            selectPiece={this.selectPiece}\n                            myTurn={this.state.myTurn}\n                            color={this.props.location.state.color}\n                        />\n                    </div>                \n                </div>\n            \n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.showQuitModal || this.state.kingInCheckMate || this.state.draw || this.state.won}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{textAlign:\"center\"}}>\n                            <h4>{'GAME OVER!'+(this.state.showQuitModal ? ' Opponent Quit' : (this.state.kingInCheckMate ? ' Your King has been captured' : (this.state.draw ? ' DRAW' : ' YOU WON !!')))}</h4>\n                            <Button onClick={this.redirect} className='button' style={{backgroundColor:'black', border: '1px solid black',width: '150px',marginTop: '20px'}}>HOME</Button>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.showPieceSwapModal}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{textAlign:\"center\"}}>\n                            <h4>Select the piece to swap</h4>\n                            {\n                                pieceArray.map((piece,index) => {\n                                    return(\n                                        <span style={{\n                                        display: 'inline-block',\n                                        height: '20vh',\n                                        width: '20vh',\n                                        border: '3px solid black'\n                                        }} onClick={() => this.swapPiece(piece, index)}>\n                                            <img style={{height:'20vh'}} src={piece} alt=\"piece\"/>\n                                        </span>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </div>            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    socket: state.websocketReducer.socket,\n    user: state.userReducer\n})\n\nexport default connect(mapStateToProps)(Game)"]},"metadata":{},"sourceType":"module"}