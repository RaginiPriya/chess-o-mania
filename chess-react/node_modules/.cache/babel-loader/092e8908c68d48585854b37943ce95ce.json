{"ast":null,"code":"import _objectSpread from\"/Users/ragir/Desktop/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/ragir/Desktop/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ragir/Desktop/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ragir/Desktop/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ragir/Desktop/chess api/chess-online/chess-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import generateSquares from'./generateSquares';import getPieces from'./getPieces';import Square from'./Square';import Piece from'./Piece';import checkMove from'./checkMove';import{Redirect}from'react-router-dom';import{Modal,Button,Image}from'react-bootstrap';import whiteQueen from'./images/white_queen.png';import blackQueen from'./images/black_queen.png';import whiteBishop from'./images/white_bishop.png';import blackBishop from'./images/black_bishop.png';import whiteKnight from'./images/white_knight.png';import blackKnight from'./images/black_knight.png';import whiteRook from'./images/white_rook.png';import blackRook from'./images/black_rook.png';import ChessPiece from'./ChessPiece';import{connect}from'react-redux';import home from'./images/home.png';var ChessGame=/*#__PURE__*/function(_Component){_inherits(ChessGame,_Component);var _super=_createSuper(ChessGame);function ChessGame(){var _this;_classCallCheck(this,ChessGame);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={kingInCheck:false,kingInCheckMate:false,kingInStaleMate:false,willPutKingInCheck:false,squares:generateSquares(_this.props.location.state.color==='white'?false:true),pieces:getPieces(),myTurn:_this.props.location.state.color==='white'?true:false,showQuitModal:false,redirect:false,showPieceSwapModal:false,pieceToSwap:null,squareToSwap:null,won:false,draw:false,gameId:_this.props.location.state.gameId,myPiecesCaptured:[],opponentPiecesCaptured:[]};_this.hide=function(){_this.setState({showQuitModal:false,showPieceSwapModal:false});};_this.redirect=function(){_this.setState({redirect:true});};_this.listenForCheck=function(){var king=_this.state.squares.find(function(square){return square.piece&&square.piece.piece==='king'&&square.piece.color===_this.props.location.state.color;});var attackingPiece=_this.state.squares.find(function(square){return square.piece&&checkMove(square.piece,square,king.piece,king,_this.state.squares);});return attackingPiece?true:false;};_this.isCheckMate=function(color){var isKingUnderAttack=_this.listenForCheck();if(isKingUnderAttack){_this.setState({kingInCheck:true});}var mySquares=_this.state.squares.filter(function(square){return square.piece&&square.piece.color===color;});var hero=mySquares.find(function(mySquare){var destSquare=_this.state.squares.find(function(square){var movePossible=checkMove(mySquare.piece,mySquare,square.piece,square,_this.state.squares,isKingUnderAttack);if(movePossible){var willPutInCheck=false;var piece=square.piece;if(piece){piece.row=null;piece.column=null;}square.piece=mySquare.piece;square.piece.row=square.row;square.piece.column=square.column;mySquare.piece=null;var isCheck=_this.listenForCheck();if(isCheck){willPutInCheck=true;}mySquare.piece=square.piece;square.piece=piece;mySquare.piece.row=mySquare.row;mySquare.piece.column=mySquare.column;if(piece){piece.row=square.row;piece.column=square.column;}return!willPutInCheck;}return false;});return destSquare?true:false;});if(isKingUnderAttack&&!hero){_this.setState({kingInCheckMate:true});_this.socket.send(JSON.stringify({'type':'won',gameId:_this.state.gameId}));}else if(!isKingUnderAttack&&!hero){_this.setState({kingInStaleMate:true});_this.socket.send(JSON.stringify({'type':'draw',gameId:_this.state.gameId}));}};_this.move=function(selectedPiece,selectedSquare,piece,square){_this.setState({willPutKingInCheck:false});var movePossible=checkMove(selectedPiece,selectedSquare,piece,square,_this.state.squares,_this.state.kingInCheck);if(movePossible){square.piece=selectedPiece;selectedPiece.row=square.row;selectedPiece.column=square.column;if(piece){piece.row=null;piece.column=null;}selectedSquare.piece=null;var isCheck=_this.listenForCheck();if(isCheck){square.piece=piece;selectedPiece.row=selectedSquare.row;selectedPiece.column=selectedSquare.column;if(piece){piece.row=square.row;piece.column=square.column;}selectedSquare.piece=selectedPiece;_this.setState({willPutKingInCheck:true});}else{if(piece){_this.state.myPiecesCaptured.push(piece.icon);}if(selectedPiece.piece==='rook'||selectedPiece.piece==='pawn'||selectedPiece.piece==='king'){selectedPiece.hasMoved=true;}var isCastling=false;if(selectedSquare.isCastling){var rookSquare=_this.state.squares.find(function(availableSquare){return availableSquare.isCastling&&availableSquare.piece&&availableSquare.piece.piece==='rook';});var rook=rookSquare.piece;var moveRookTo=_this.state.squares.find(function(availableSquare){return availableSquare.row===rookSquare.row&&availableSquare.column===(rookSquare.column===1?rookSquare.column+3:rookSquare.column-2);});moveRookTo.piece=rook;rook.row=moveRookTo.row;rook.column=moveRookTo.column;rookSquare.piece=null;rook.hasMoved=true;rookSquare.isCastling=false;selectedSquare.isCastling=false;isCastling=true;}if(_this.state.kingInCheck){_this.setState({kingInCheck:false});}if(selectedPiece.piece==='pawn'&&square.row===(_this.props.location.state.color==='white'?1:8)){_this.setState({showPieceSwapModal:true,squareToSwap:square});}// else {\n_this.socket.send(JSON.stringify({type:\"move\",gameId:_this.state.gameId,fromSquare:{row:selectedSquare.row,column:selectedSquare.column},isCastling:isCastling,toSquare:{row:square.row,column:square.column},myColor:_this.props.location.state.color}));// }\n_this.setState({myTurn:false});selectedPiece.selected=false;selectedSquare.selected=false;}}selectedPiece.selected=false;selectedSquare.selected=false;_this.setState(function(prevState){return _objectSpread({},prevState);});};_this.selectPiece=function(square,piece){square.selected=true;piece.selected=true;_this.setState(_this.state);};_this.swapPiece=function(pieceImage,index){var square=_this.state.squareToSwap;var pawn=square.piece;pawn.row=null;pawn.column=null;var pieceType=['queen','bishop','knight','rook'];var piece=new ChessPiece(pieceType[index],_this.props.location.state.color,square.row,square.column,pieceImage);square.piece=piece;piece.row=square.row;piece.column=square.column;var pieces=_this.state.pieces;pieces.push(piece);_this.setState({pieces:pieces,squares:_this.state.squares});_this.hide();_this.socket.send(JSON.stringify({type:\"swap\",gameId:_this.state.gameId,index:index,fromSquare:{row:square.row,column:square.column},myColor:_this.props.location.state.color}));};return _this;}_createClass(ChessGame,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// this.socket = new WebSocket(\"ws://localhost:8000/game/\"+this.props.location.state.gameId+\"?userId=\"+this.props.location.state.userId)\nthis.socket=this.props.socket;this.socket.onmessage=function(input){var data=JSON.parse(input.data);if(data.type==='quit'&&!_this2.state.kingInCheckMate){_this2.setState({showQuitModal:true});}if(data.type==='swap'){var index=data.index,fromSquare=data.fromSquare,myColor=data.myColor;var opponentPieceArray=myColor==='white'?[whiteQueen,whiteBishop,whiteKnight,whiteRook]:[blackQueen,blackBishop,blackKnight,blackRook];var pawnFromSquare=_this2.state.squares.find(function(sq){return sq.column===fromSquare.column&&sq.row===fromSquare.row;});var pawn=pawnFromSquare.piece;pawn.row=null;pawn.column=null;var pieceType=['queen','bishop','knight','rook'];var piece=new ChessPiece(pieceType[index],myColor,fromSquare.row,fromSquare.column,opponentPieceArray[index]);var pawnToSquare=_this2.state.squares.find(function(sq){return sq.column===fromSquare.column&&sq.row===fromSquare.row;});pawnToSquare.piece=piece;piece.row=pawnToSquare.row;piece.column=pawnToSquare.column;var pieces=_this2.state.pieces;pieces.push(piece);_this2.setState({pieces:pieces,squares:_this2.state.squares,myTurn:true});}if(data.type==='won'){_this2.setState({\"won\":true});}else if(data.type==='draw'){_this2.setState({\"draw\":true});}if(data.type==='move'){var _fromSquare=data.fromSquare,toSquare=data.toSquare,isCastling=data.isCastling;var from=_this2.state.squares.find(function(square){return square.row===_fromSquare.row&&square.column===_fromSquare.column;});var to=_this2.state.squares.find(function(square){return square.row===toSquare.row&&square.column===toSquare.column;});if(from.piece.piece==='rook'||from.piece.piece==='pawn'||from.piece.piece==='king'){from.piece.hasMoved=true;}if(to.piece){_this2.state.opponentPiecesCaptured.push(to.piece.icon);to.piece.row=null;to.piece.column=null;}to.piece=from.piece;from.piece=null;to.piece.row=to.row;to.piece.column=to.column;if(isCastling){var rookSquare=_this2.state.squares.find(function(square){return square.piece&&square.piece.piece==='rook'&&square.column===(_fromSquare.column>toSquare.column?1:8)&&square.row===_fromSquare.row;});var rook=rookSquare.piece;var moveRookTo=_this2.state.squares.find(function(availableSquare){return availableSquare.row===rookSquare.row&&availableSquare.column===(rookSquare.column===1?rookSquare.column+3:rookSquare.column-2);});moveRookTo.piece=rook;rook.row=moveRookTo.row;rook.column=moveRookTo.column;rookSquare.piece=null;}_this2.setState({squares:_this2.state.squares,pieces:_this2.state.pieces,myTurn:true});_this2.isCheckMate(_this2.props.location.state.color);}};}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// this.socket.send(JSON.stringify({\"type\":\"quit\",gameId: this.state.gameId}))\nconsole.log(\"socket closed\");this.socket.close();}},{key:\"render\",value:function render(){var _this3=this;var pieceArray=this.props.location.state.color==='white'?[whiteQueen,whiteBishop,whiteKnight,whiteRook]:[blackQueen,blackBishop,blackKnight,blackRook];var myName=this.props.location.state.player2?this.props.location.state.userId:'You';var opponentName=this.props.location.state.player2?this.props.location.state.player2:'Opponent';return/*#__PURE__*/React.createElement(\"div\",null,this.state.redirect?/*#__PURE__*/React.createElement(Redirect,{to:\"/home\"}):null,/*#__PURE__*/React.createElement(\"div\",{style:{position:'fixed',left:'2%',top:'2%'}},/*#__PURE__*/React.createElement(Image,{src:home,roundedCircle:true,width:\"100\",height:\"100\",onClick:this.redirect,style:{cursor:'pointer'}})),/*#__PURE__*/React.createElement(\"div\",{style:{width:'20%',position:'fixed',right:'2%',top:'75%'}},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"legend\",{style:{width:'auto'}},/*#__PURE__*/React.createElement(Image,{src:this.props.user.imageUrl,roundedCircle:true,width:\"60\",height:\"60\"}),/*#__PURE__*/React.createElement(\"span\",{style:{fontFamily:'Rouge Script, cursive'}},this.props.user.username,\" \")),this.state.myPiecesCaptured.length>0?this.state.myPiecesCaptured.map(function(piece){return/*#__PURE__*/React.createElement(Image,{src:piece,roundedCircle:true,width:\"30\",height:\"30\"});}):/*#__PURE__*/React.createElement(\"div\",{style:{color:'rgba(1,1,1,0.3)'}},\"Pieces captured\"))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'20%',position:'fixed',right:'2%',top:'5%'}},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"legend\",{style:{width:'auto'}},/*#__PURE__*/React.createElement(Image,{src:this.props.location.state.opponentImageUrl,roundedCircle:true,width:\"60\",height:\"60\"}),/*#__PURE__*/React.createElement(\"span\",{style:{fontFamily:'Rouge Script, cursive'}},this.props.location.state.opponentName,\" \")),this.state.opponentPiecesCaptured.length>0?this.state.opponentPiecesCaptured.map(function(piece){return/*#__PURE__*/React.createElement(Image,{src:piece,roundedCircle:true,width:\"30\",height:\"30\"});}):/*#__PURE__*/React.createElement(\"div\",{style:{color:'rgba(1,1,1,0.3)'}},\"Pieces captured\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"Game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Board\"},/*#__PURE__*/React.createElement(Square,{squares:this.state.squares,move:this.move,pieces:this.state.pieces,myTurn:this.state.myTurn}),/*#__PURE__*/React.createElement(Piece,{pieces:this.state.pieces,squares:this.state.squares,move:this.move,selectPiece:this.selectPiece,myTurn:this.state.myTurn,color:this.props.location.state.color}))),/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,keyboard:false,show:this.state.showQuitModal||this.state.kingInCheckMate||this.state.draw||this.state.won,onHide:this.hide,className:\"my-modal\",size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true,hidden:\"true\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",null,'GAME OVER!'+(this.state.showQuitModal&&!this.state.kingInCheckMate&&!this.state.draw&&!this.state.won?' Opponent Quit':this.state.kingInCheckMate?' Your King has been captured':this.state.draw?' DRAW':' YOU WON !!')),/*#__PURE__*/React.createElement(Button,{onClick:this.redirect,className:\"button\",style:{backgroundColor:'black',border:'1px solid black',width:'150px',marginTop:'20px'}},\"HOME\")))),/*#__PURE__*/React.createElement(Modal,{backdrop:\"static\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,keyboard:false,show:this.state.showPieceSwapModal,onHide:this.hide,className:\"my-modal\",size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true,hidden:\"true\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",null,\"Select the piece to swap\"),pieceArray.map(function(piece,index){return/*#__PURE__*/React.createElement(\"span\",{style:{display:'inline-block',height:'20vh',width:'20vh',border:'3px solid black'},onClick:function onClick(){return _this3.swapPiece(piece,index);}},/*#__PURE__*/React.createElement(\"img\",{style:{height:'20vh'},src:piece,alt:\"piece\"}));})))));}}]);return ChessGame;}(Component);var mapStateToProps=function mapStateToProps(state){return{socket:state.websocketReducer.socket,user:state.userReducer};};export default connect(mapStateToProps)(ChessGame);","map":{"version":3,"sources":["/Users/ragir/Desktop/chess api/chess-online/chess-react/src/ChessGame.js"],"names":["React","Component","generateSquares","getPieces","Square","Piece","checkMove","Redirect","Modal","Button","Image","whiteQueen","blackQueen","whiteBishop","blackBishop","whiteKnight","blackKnight","whiteRook","blackRook","ChessPiece","connect","home","ChessGame","state","kingInCheck","kingInCheckMate","kingInStaleMate","willPutKingInCheck","squares","props","location","color","pieces","myTurn","showQuitModal","redirect","showPieceSwapModal","pieceToSwap","squareToSwap","won","draw","gameId","myPiecesCaptured","opponentPiecesCaptured","hide","setState","listenForCheck","king","find","square","piece","attackingPiece","isCheckMate","isKingUnderAttack","mySquares","filter","hero","mySquare","destSquare","movePossible","willPutInCheck","row","column","isCheck","socket","send","JSON","stringify","move","selectedPiece","selectedSquare","push","icon","hasMoved","isCastling","rookSquare","availableSquare","rook","moveRookTo","type","fromSquare","toSquare","myColor","selected","prevState","selectPiece","swapPiece","pieceImage","index","pawn","pieceType","onmessage","input","data","parse","opponentPieceArray","pawnFromSquare","sq","pawnToSquare","from","to","console","log","close","pieceArray","myName","player2","userId","opponentName","position","left","top","cursor","width","right","user","imageUrl","fontFamily","username","length","map","opponentImageUrl","textAlign","backgroundColor","border","marginTop","display","height","mapStateToProps","websocketReducer","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport generateSquares from './generateSquares'\nimport getPieces from './getPieces'\nimport Square from './Square'\nimport Piece from './Piece'\nimport checkMove from './checkMove'\nimport { Redirect } from 'react-router-dom';\nimport { Modal, Button, Image } from 'react-bootstrap'\nimport whiteQueen from './images/white_queen.png';\nimport blackQueen from './images/black_queen.png'\nimport whiteBishop from './images/white_bishop.png';\nimport blackBishop from './images/black_bishop.png'\nimport whiteKnight from './images/white_knight.png';\nimport blackKnight from './images/black_knight.png'\nimport whiteRook from './images/white_rook.png';\nimport blackRook from './images/black_rook.png'\nimport ChessPiece from './ChessPiece'\nimport { connect } from 'react-redux';\nimport home from './images/home.png'\n\nclass ChessGame extends Component {\n    state = {\n        kingInCheck: false,\n        kingInCheckMate: false,\n        kingInStaleMate: false,\n        willPutKingInCheck: false,\n        squares: generateSquares(this.props.location.state.color === 'white' ? false : true),\n        pieces: getPieces(),\n        myTurn: this.props.location.state.color === 'white' ? true : false,\n        showQuitModal: false,\n        redirect: false,\n        showPieceSwapModal: false,\n        pieceToSwap: null,\n        squareToSwap: null,\n        won: false,\n        draw: false,\n        gameId: this.props.location.state.gameId,\n        myPiecesCaptured: [],\n        opponentPiecesCaptured: []\n    }\n\n    hide = () => {\n        this.setState({ showQuitModal: false, showPieceSwapModal: false })\n    }\n\n    redirect = () => {\n        this.setState({ redirect: true })\n    }\n\n    componentDidMount() {\n        // this.socket = new WebSocket(\"ws://localhost:8000/game/\"+this.props.location.state.gameId+\"?userId=\"+this.props.location.state.userId)\n        this.socket = this.props.socket\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data)\n            if (data.type === 'quit' && !this.state.kingInCheckMate) {\n                this.setState({ showQuitModal: true })\n            }\n            if (data.type === 'swap') {\n                const { index, fromSquare, myColor } = data\n                const opponentPieceArray = myColor === 'white' ? [whiteQueen, whiteBishop, whiteKnight, whiteRook] :\n                    [blackQueen, blackBishop, blackKnight, blackRook]\n\n                const pawnFromSquare = this.state.squares.find((sq) => { return sq.column === fromSquare.column && sq.row === fromSquare.row })\n                const pawn = pawnFromSquare.piece\n                pawn.row = null\n                pawn.column = null\n                const pieceType = ['queen', 'bishop', 'knight', 'rook']\n                const piece = new ChessPiece(pieceType[index], myColor, fromSquare.row, fromSquare.column, opponentPieceArray[index])\n                const pawnToSquare = this.state.squares.find((sq) => { return sq.column === fromSquare.column && sq.row === fromSquare.row })\n                pawnToSquare.piece = piece\n                piece.row = pawnToSquare.row\n                piece.column = pawnToSquare.column\n                const pieces = this.state.pieces\n                pieces.push(piece)\n                this.setState({ pieces: pieces, squares: this.state.squares, myTurn: true });\n\n            }\n            if (data.type === 'won') {\n                this.setState({ \"won\": true })\n            }\n            else if (data.type === 'draw') {\n                this.setState({ \"draw\": true })\n            }\n\n            if (data.type === 'move') {\n                const { fromSquare, toSquare, isCastling } = data\n                const from = this.state.squares.find((square) => {\n                    return square.row === fromSquare.row && square.column === fromSquare.column\n                })\n                const to = this.state.squares.find((square) => {\n                    return square.row === toSquare.row && square.column === toSquare.column\n                })\n                if (from.piece.piece === 'rook' || from.piece.piece === 'pawn' || from.piece.piece === 'king') {\n                    from.piece.hasMoved = true\n                }\n                if (to.piece) {\n                    this.state.opponentPiecesCaptured.push(to.piece.icon)\n                    to.piece.row = null\n                    to.piece.column = null\n                }\n                to.piece = from.piece\n                from.piece = null\n                to.piece.row = to.row\n                to.piece.column = to.column\n                if (isCastling) {\n                    const rookSquare = this.state.squares.find((square) => {\n                        return (\n                            square.piece && square.piece.piece === 'rook' &&\n                            (square.column === (fromSquare.column > toSquare.column ? 1 : 8)) &&\n                            square.row === fromSquare.row\n                        )\n                    })\n                    const rook = rookSquare.piece\n                    const moveRookTo = this.state.squares.find((availableSquare) => {\n                        return (\n                            availableSquare.row === rookSquare.row &&\n                            availableSquare.column === (rookSquare.column === 1 ? rookSquare.column + 3 : rookSquare.column - 2)\n                        )\n                    })\n                    moveRookTo.piece = rook\n                    rook.row = moveRookTo.row\n                    rook.column = moveRookTo.column\n                    rookSquare.piece = null\n                }\n                this.setState({ squares: this.state.squares, pieces: this.state.pieces, myTurn: true })\n                this.isCheckMate(this.props.location.state.color)\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        // this.socket.send(JSON.stringify({\"type\":\"quit\",gameId: this.state.gameId}))\n        console.log(\"socket closed\")\n        this.socket.close()\n    }\n\n    listenForCheck = () => {\n        const king = this.state.squares.find((square) => {\n            return square.piece && square.piece.piece === 'king' && square.piece.color === this.props.location.state.color\n        })\n        const attackingPiece = this.state.squares.find((square) => {\n            return square.piece && checkMove(square.piece, square, king.piece, king, this.state.squares)\n        })\n        return (attackingPiece ? true : false)\n    }\n\n    isCheckMate = (color) => {\n        const isKingUnderAttack = this.listenForCheck()\n        if (isKingUnderAttack) {\n            this.setState({ kingInCheck: true })\n        }\n\n        const mySquares = this.state.squares.filter((square) => {\n            return square.piece && square.piece.color === color\n        })\n\n        const hero = mySquares.find((mySquare) => {\n            const destSquare = this.state.squares.find((square) => {\n                const movePossible = checkMove(mySquare.piece, mySquare, square.piece, square, this.state.squares, isKingUnderAttack)\n                if (movePossible) {\n                    var willPutInCheck = false\n                    const piece = square.piece\n                    if (piece) {\n                        piece.row = null\n                        piece.column = null\n                    }\n                    square.piece = mySquare.piece\n                    square.piece.row = square.row\n                    square.piece.column = square.column\n                    mySquare.piece = null\n                    const isCheck = this.listenForCheck()\n                    if (isCheck) {\n                        willPutInCheck = true\n                    }\n                    mySquare.piece = square.piece\n                    square.piece = piece\n                    mySquare.piece.row = mySquare.row\n                    mySquare.piece.column = mySquare.column\n                    if (piece) {\n                        piece.row = square.row\n                        piece.column = square.column\n                    }\n                    return !willPutInCheck\n                }\n                return false\n            })\n            return (destSquare ? true : false)\n        })\n        if (isKingUnderAttack && !hero) {\n            this.setState({ kingInCheckMate: true })\n            this.socket.send(JSON.stringify({ 'type': 'won', gameId: this.state.gameId }))\n        }\n        else if (!isKingUnderAttack && !hero) {\n            this.setState({ kingInStaleMate: true })\n            this.socket.send(JSON.stringify({ 'type': 'draw', gameId: this.state.gameId }))\n        }\n    }\n\n    move = (selectedPiece, selectedSquare, piece, square) => {\n        this.setState({ willPutKingInCheck: false })\n        const movePossible = checkMove(selectedPiece, selectedSquare, piece, square, this.state.squares, this.state.kingInCheck)\n        if (movePossible) {\n            square.piece = selectedPiece\n            selectedPiece.row = square.row\n            selectedPiece.column = square.column\n            if (piece) {\n                piece.row = null\n                piece.column = null\n            }\n            selectedSquare.piece = null\n            const isCheck = this.listenForCheck()\n            if (isCheck) {\n                square.piece = piece\n                selectedPiece.row = selectedSquare.row\n                selectedPiece.column = selectedSquare.column\n                if (piece) {\n                    piece.row = square.row\n                    piece.column = square.column\n                }\n                selectedSquare.piece = selectedPiece\n                this.setState({ willPutKingInCheck: true })\n            }\n            else {\n                if (piece) {\n                    this.state.myPiecesCaptured.push(piece.icon)\n                }\n                if (selectedPiece.piece === 'rook' || selectedPiece.piece === 'pawn' || selectedPiece.piece === 'king') {\n                    selectedPiece.hasMoved = true\n                }\n                var isCastling = false\n                if (selectedSquare.isCastling) {\n                    const rookSquare = this.state.squares.find((availableSquare) => {\n                        return availableSquare.isCastling && availableSquare.piece && availableSquare.piece.piece === 'rook'\n                    })\n                    const rook = rookSquare.piece\n                    const moveRookTo = this.state.squares.find((availableSquare) => {\n                        return (\n                            availableSquare.row === rookSquare.row &&\n                            availableSquare.column === (rookSquare.column === 1 ? rookSquare.column + 3 : rookSquare.column - 2)\n                        )\n                    })\n                    moveRookTo.piece = rook\n                    rook.row = moveRookTo.row\n                    rook.column = moveRookTo.column\n                    rookSquare.piece = null\n                    rook.hasMoved = true\n                    rookSquare.isCastling = false\n                    selectedSquare.isCastling = false\n                    isCastling = true\n                }\n                if (this.state.kingInCheck) {\n                    this.setState({ kingInCheck: false })\n                }\n                if (selectedPiece.piece === 'pawn' && square.row === (this.props.location.state.color === 'white' ? 1 : 8)) {\n                    this.setState({ showPieceSwapModal: true, squareToSwap: square })\n                }\n                // else {\n                this.socket.send(JSON.stringify({ type: \"move\", gameId: this.state.gameId, fromSquare: { row: selectedSquare.row, column: selectedSquare.column }, isCastling: isCastling, toSquare: { row: square.row, column: square.column }, myColor: this.props.location.state.color }))\n                // }\n                this.setState({ myTurn: false })\n                selectedPiece.selected = false\n                selectedSquare.selected = false\n            }\n        }\n        selectedPiece.selected = false\n        selectedSquare.selected = false\n        this.setState(prevState => {\n            return {\n                ...prevState\n            };\n        });\n    }\n\n    selectPiece = (square, piece) => {\n        square.selected = true\n        piece.selected = true\n        this.setState(this.state)\n    }\n\n    swapPiece = (pieceImage, index) => {\n        const square = this.state.squareToSwap\n        const pawn = square.piece\n        pawn.row = null\n        pawn.column = null\n        const pieceType = ['queen', 'bishop', 'knight', 'rook']\n        const piece = new ChessPiece(pieceType[index], this.props.location.state.color, square.row, square.column, pieceImage)\n        square.piece = piece\n        piece.row = square.row\n        piece.column = square.column\n        const pieces = this.state.pieces\n        pieces.push(piece)\n        this.setState({ pieces: pieces, squares: this.state.squares });\n        this.hide()\n        this.socket.send(JSON.stringify({ type: \"swap\", gameId: this.state.gameId, index: index, fromSquare: { row: square.row, column: square.column }, myColor: this.props.location.state.color }))\n    }\n\n    render() {\n        const pieceArray = this.props.location.state.color === 'white' ? [whiteQueen, whiteBishop, whiteKnight, whiteRook] :\n            [blackQueen, blackBishop, blackKnight, blackRook]\n\n        const myName = this.props.location.state.player2 ? this.props.location.state.userId : 'You'\n        const opponentName = this.props.location.state.player2 ? this.props.location.state.player2 : 'Opponent'\n\n        return (\n            <div>\n                {this.state.redirect ? <Redirect to=\"/home\" /> : null}\n\n                <div style={{ position: 'fixed', left: '2%', top: '2%' }}>\n                    <Image src={home} roundedCircle width=\"100\" height=\"100\" onClick={this.redirect} style={{ cursor: 'pointer' }} />\n                </div>\n                <div style={{ width: '20%', position: 'fixed', right: '2%', top: '75%' }}>\n\n                    <fieldset>\n                        <legend style={{ width: 'auto' }}>\n                            <Image src={this.props.user.imageUrl} roundedCircle width=\"60\" height=\"60\" /><span style={{ fontFamily: 'Rouge Script, cursive' }}>{this.props.user.username} </span>\n                        </legend>\n                        {this.state.myPiecesCaptured.length > 0 ?\n                            (\n                                this.state.myPiecesCaptured.map((piece) => {\n                                    return (\n                                        <Image src={piece} roundedCircle width=\"30\" height=\"30\" />\n                                    )\n                                })\n                            )\n                            : <div style={{ color: 'rgba(1,1,1,0.3)' }}>Pieces captured</div>\n                        }\n\n                    </fieldset>\n\n\n                </div>\n                <div style={{ width: '20%', position: 'fixed', right: '2%', top: '5%' }}>\n\n                    <fieldset>\n                        <legend style={{ width: 'auto' }}>\n                            <Image src={this.props.location.state.opponentImageUrl} roundedCircle width=\"60\" height=\"60\" /><span style={{ fontFamily: 'Rouge Script, cursive' }}>{this.props.location.state.opponentName} </span>\n                        </legend>\n\n                        {this.state.opponentPiecesCaptured.length > 0 ?\n                            (\n                                this.state.opponentPiecesCaptured.map((piece) => {\n                                    return (\n                                        <Image src={piece} roundedCircle width=\"30\" height=\"30\" />\n                                    )\n                                })\n                            )\n                            : <div style={{ color: 'rgba(1,1,1,0.3)' }}>Pieces captured</div>\n                        }\n\n\n                    </fieldset>\n\n\n                </div>\n\n                <div className=\"Game\">\n                    <div className=\"Board\">\n                        <Square\n                            squares={this.state.squares}\n                            move={this.move}\n                            pieces={this.state.pieces}\n                            myTurn={this.state.myTurn}\n                        />\n                        <Piece\n                            pieces={this.state.pieces}\n                            squares={this.state.squares}\n                            move={this.move}\n                            selectPiece={this.selectPiece}\n                            myTurn={this.state.myTurn}\n                            color={this.props.location.state.color}\n                        />\n                    </div>\n                </div>\n\n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.showQuitModal || this.state.kingInCheckMate || this.state.draw || this.state.won}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{ textAlign: \"center\" }}>\n                            <h4>{'GAME OVER!' + (this.state.showQuitModal && !this.state.kingInCheckMate && !this.state.draw && !this.state.won ? ' Opponent Quit' : (this.state.kingInCheckMate ? ' Your King has been captured' : (this.state.draw ? ' DRAW' : ' YOU WON !!')))}</h4>\n                            <Button onClick={this.redirect} className='button' style={{ backgroundColor: 'black', border: '1px solid black', width: '150px', marginTop: '20px' }}>HOME</Button>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.showPieceSwapModal}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                    size=\"lg\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{ textAlign: \"center\" }}>\n                            <h4>Select the piece to swap</h4>\n                            {\n                                pieceArray.map((piece, index) => {\n                                    return (\n                                        <span style={{\n                                            display: 'inline-block',\n                                            height: '20vh',\n                                            width: '20vh',\n                                            border: '3px solid black'\n                                        }} onClick={() => this.swapPiece(piece, index)}>\n                                            <img style={{ height: '20vh' }} src={piece} alt=\"piece\" />\n                                        </span>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    socket: state.websocketReducer.socket,\n    user: state.userReducer\n})\n\nexport default connect(mapStateToProps)(ChessGame)"]},"metadata":{},"sourceType":"module"}