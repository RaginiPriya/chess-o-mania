{"ast":null,"code":"import blackPawn from './images/black_pawn.png';\nimport blackRook from './images/black_rook.png';\nimport blackQueen from './images/black_queen.png';\nimport blackKing from './images/black_king.png';\nimport blackBishop from './images/black_bishop.png';\nimport blackKnight from './images/black_knight.png';\nimport whitePawn from './images/white_pawn.png';\nimport whiteRook from './images/white_rook.png';\nimport whiteQueen from './images/white_queen.png';\nimport whiteKing from './images/white_king.png';\nimport whiteBishop from './images/white_bishop.png';\nimport whiteKnight from './images/white_knight.png';\nimport ChessPiece from './ChessPiece';\n\nconst getPieces = () => {\n  const pieceArray = [new ChessPiece('pawn', 'white', 7, 1, whitePawn), new ChessPiece('pawn', 'white', 7, 2, whitePawn), new ChessPiece('pawn', 'white', 7, 3, whitePawn), new ChessPiece('pawn', 'white', 7, 4, whitePawn), new ChessPiece('pawn', 'white', 7, 5, whitePawn), new ChessPiece('pawn', 'white', 7, 6, whitePawn), new ChessPiece('pawn', 'white', 7, 7, whitePawn), new ChessPiece('pawn', 'white', 7, 8, whitePawn), new ChessPiece('rook', 'white', 8, 1, whiteRook), new ChessPiece('knight', 'white', 8, 2, whiteKnight), new ChessPiece('bishop', 'white', 8, 3, whiteBishop), new ChessPiece('queen', 'white', 8, 4, whiteQueen), new ChessPiece('king', 'white', 8, 5, whiteKing), new ChessPiece('bishop', 'white', 8, 6, whiteBishop), new ChessPiece('knight', 'white', 8, 7, whiteKnight), new ChessPiece('rook', 'white', 8, 8, whiteRook), new ChessPiece('pawn', 'black', 2, 1, blackPawn), new ChessPiece('pawn', 'black', 2, 2, blackPawn), new ChessPiece('pawn', 'black', 2, 3, blackPawn), new ChessPiece('pawn', 'black', 2, 4, blackPawn), new ChessPiece('pawn', 'black', 2, 5, blackPawn), new ChessPiece('pawn', 'black', 2, 6, blackPawn), new ChessPiece('pawn', 'black', 2, 7, blackPawn), new ChessPiece('pawn', 'black', 2, 8, blackPawn), new ChessPiece('rook', 'black', 1, 1, blackRook), new ChessPiece('knight', 'black', 1, 2, blackKnight), new ChessPiece('bishop', 'black', 1, 3, blackBishop), new ChessPiece('queen', 'black', 1, 4, blackQueen), new ChessPiece('king', 'black', 1, 5, blackKing), new ChessPiece('bishop', 'black', 1, 6, blackBishop), new ChessPiece('knight', 'black', 1, 7, blackKnight), new ChessPiece('rook', 'black', 1, 8, blackRook)];\n  return pieceArray;\n};\n\nexport default getPieces;","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess api/chess-online/chess-react/src/getPieces.js"],"names":["blackPawn","blackRook","blackQueen","blackKing","blackBishop","blackKnight","whitePawn","whiteRook","whiteQueen","whiteKing","whiteBishop","whiteKnight","ChessPiece","getPieces","pieceArray"],"mappings":"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","sourcesContent":["import blackPawn from './images/black_pawn.png';\nimport blackRook from './images/black_rook.png';\nimport blackQueen from './images/black_queen.png';\nimport blackKing from './images/black_king.png';\nimport blackBishop from './images/black_bishop.png';\nimport blackKnight from './images/black_knight.png';\n\nimport whitePawn from './images/white_pawn.png';\nimport whiteRook from './images/white_rook.png';\nimport whiteQueen from './images/white_queen.png';\nimport whiteKing from './images/white_king.png';\nimport whiteBishop from './images/white_bishop.png';\nimport whiteKnight from './images/white_knight.png';\n\nimport ChessPiece from './ChessPiece'\n\nconst getPieces = () => {\n    const pieceArray = [\n        new ChessPiece('pawn','white', 7, 1, whitePawn),\n        new ChessPiece('pawn','white', 7, 2, whitePawn),\n        new ChessPiece('pawn','white', 7, 3, whitePawn),\n        new ChessPiece('pawn','white', 7, 4, whitePawn),\n        new ChessPiece('pawn','white', 7, 5, whitePawn),\n        new ChessPiece('pawn','white', 7, 6, whitePawn),\n        new ChessPiece('pawn','white', 7, 7, whitePawn),\n        new ChessPiece('pawn','white', 7, 8, whitePawn),\n        new ChessPiece('rook','white', 8, 1, whiteRook),\n        new ChessPiece('knight','white', 8, 2, whiteKnight),\n        new ChessPiece('bishop','white', 8, 3, whiteBishop),\n        new ChessPiece('queen','white', 8, 4, whiteQueen),\n        new ChessPiece('king','white', 8, 5, whiteKing),\n        new ChessPiece('bishop','white', 8, 6, whiteBishop),\n        new ChessPiece('knight','white', 8, 7, whiteKnight),\n        new ChessPiece('rook','white', 8, 8, whiteRook),\n        new ChessPiece('pawn','black', 2, 1, blackPawn),\n        new ChessPiece('pawn','black', 2, 2, blackPawn),\n        new ChessPiece('pawn','black', 2, 3, blackPawn),\n        new ChessPiece('pawn','black', 2, 4, blackPawn),\n        new ChessPiece('pawn','black', 2, 5, blackPawn),\n        new ChessPiece('pawn','black', 2, 6, blackPawn),\n        new ChessPiece('pawn','black', 2, 7, blackPawn),\n        new ChessPiece('pawn','black', 2, 8, blackPawn),\n        new ChessPiece('rook','black', 1, 1, blackRook),\n        new ChessPiece('knight','black', 1, 2, blackKnight),\n        new ChessPiece('bishop','black', 1, 3, blackBishop),\n        new ChessPiece('queen','black', 1, 4, blackQueen),\n        new ChessPiece('king','black', 1, 5, blackKing),\n        new ChessPiece('bishop','black', 1, 6, blackBishop),\n        new ChessPiece('knight','black', 1, 7, blackKnight),\n        new ChessPiece('rook','black', 1, 8, blackRook)\n    ];\n\n    return pieceArray\n}\nexport default getPieces"]},"metadata":{},"sourceType":"module"}