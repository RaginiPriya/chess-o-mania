{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Documents/chess/chess-react/src/Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Modal, Spinner, Button } from 'react-bootstrap';\nimport UserNavBar from './UserNavBar';\nimport chess from './chess1.jpg';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { API_BASE_URL } from './constants';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameId: null,\n      waiting: false,\n      color: null,\n      opponentName: null,\n      opponentImageUrl: null,\n      id: null,\n      online: false,\n      friends: false\n    };\n\n    this.playOnline = () => {\n      this.setState({\n        waiting: true\n      });\n      console.log(this.props.user);\n      this.socket = new WebSocket(\"ws://localhost:8080/online/\" + encodeURIComponent(this.state.id)); //CHANGE before commit\n\n      this.socket.onopen = () => {\n        console.log(\"socket connected\");\n      };\n\n      this.socket.onclose = () => {\n        console.log('socket closed');\n      };\n\n      this.socket.onmessage = input => {\n        var data = JSON.parse(input.data);\n\n        if (data.color) {\n          this.setState({\n            online: true,\n            gameId: data.gameId,\n            color: data.color,\n            opponentName: data.opponentName,\n            opponentImageUrl: data.opponentImageUrl\n          });\n        }\n\n        console.log(data);\n      };\n\n      this.props.setWs({\n        socket: this.socket\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        waiting: false\n      });\n      console.log('socket closed');\n      this.socket.close();\n    };\n\n    this.createGame = () => {\n      this.socket = new WebSocket(\"ws://localhost:8080/create/\" + encodeURIComponent(this.state.id)); //CHANGE before commit\n\n      this.socket.onopen = () => {\n        console.log(\"socket connected\");\n      };\n\n      this.socket.onclose = () => {\n        console.log('socket closed');\n      };\n\n      this.socket.onmessage = input => {\n        var data = JSON.parse(input.data);\n\n        if (data.type && data.type === 'create') {\n          this.setState({\n            friends: true,\n            gameId: data.gameId\n          });\n        }\n\n        console.log(data);\n      };\n\n      this.props.setWs({\n        socket: this.socket\n      });\n    };\n\n    this.joinGame = () => {};\n  }\n\n  componentDidMount() {\n    fetch(API_BASE_URL + '/user', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.props.user.token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        id: data.id\n      });\n      this.props.setUser({\n        username: data.name,\n        imageUrl: data.imageUrl,\n        id: data.id\n      });\n    });\n  }\n\n  render() {\n    const redirect = this.state.gameId && this.state.online ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/game',\n        state: {\n          gameId: this.state.gameId,\n          color: this.state.color,\n          // userId: this.state.userId,\n          opponentName: this.state.opponentName,\n          opponentImageUrl: this.state.opponentImageUrl\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 67\n      }\n    }) : this.state.gameId && this.state.online ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/game',\n        state: {\n          gameId: this.state.gameId,\n          color: this.state.color,\n          // userId: this.state.userId,\n          opponentName: this.state.opponentName,\n          opponentImageUrl: this.state.opponentImageUrl\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 52\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, redirect, /*#__PURE__*/React.createElement(UserNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftHalf grow\",\n      onClick: this.playOnline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"PLAY ONLINE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Compete against strangers online\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightHalf grow \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"PLAY WITH FRIENDS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Create or join a room and compete against your friend\", /*#__PURE__*/React.createElement(Button, {\n      onClick: this.createGame,\n      className: \"button\",\n      style: {\n        backgroundColor: ' rgb(142, 68, 173)',\n        border: '1px solid white',\n        width: '150px',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"CREATE ROOM\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.joinGame,\n      className: \"button\",\n      style: {\n        backgroundColor: ' rgb(142, 68, 173)',\n        border: '1px solid white',\n        width: '150px',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"JOIN ROOM\"))), /*#__PURE__*/React.createElement(Modal, {\n      backdrop: \"static\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      keyboard: false,\n      show: this.state.waiting,\n      onHide: this.hide,\n      className: \"my-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      hidden: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, \"Searching for Opponent\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.hide,\n      className: \"button\",\n      style: {\n        backgroundColor: ' rgb(142, 68, 173)',\n        border: '1px solid white',\n        width: '150px',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, \"CANCEL\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWs: data => {\n    const action = {\n      type: 'WS',\n      payload: data\n    };\n    return dispatch(action);\n  },\n  setUser: data => {\n    const action = {\n      type: 'SET_USER',\n      payload: data\n    };\n    return dispatch(action);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess-react/src/Home.js"],"names":["React","Component","Container","Row","Modal","Spinner","Button","UserNavBar","chess","connect","Redirect","API_BASE_URL","Home","state","gameId","waiting","color","opponentName","opponentImageUrl","id","online","friends","playOnline","setState","console","log","props","user","socket","WebSocket","encodeURIComponent","onopen","onclose","onmessage","input","data","JSON","parse","setWs","hide","close","createGame","type","joinGame","componentDidMount","fetch","method","headers","token","then","response","json","setUser","username","name","imageUrl","render","redirect","pathname","backgroundColor","border","width","marginTop","textAlign","marginBottom","mapStateToProps","userReducer","mapDispatchToProps","dispatch","action","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Modal, Spinner, Button } from 'react-bootstrap'\nimport UserNavBar from './UserNavBar'\nimport chess from './chess1.jpg'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\nimport {API_BASE_URL} from './constants'\n\nclass Home extends Component {\n    state = {\n        gameId: null,\n        waiting: false,\n        color: null,\n        opponentName: null,\n        opponentImageUrl: null,\n        id: null,\n        online: false,\n        friends: false\n    }\n\n    componentDidMount() {\n        fetch(API_BASE_URL+'/user', {\n                method: 'GET',\n                headers: {\n                  'Authorization': 'Bearer ' + this.props.user.token,\n                }\n            })\n                .then((response) => {\n                    return response.json()\n                })\n                .then((data) => {\n                    console.log(data)\n                    this.setState({id:data.id})\n                    this.props.setUser({username: data.name, imageUrl: data.imageUrl, id: data.id})\n                })\n    }\n\n    playOnline = () => {\n        this.setState({ waiting: true });\n        console.log(this.props.user)\n        this.socket = new WebSocket(\"ws://localhost:8080/online/\" + encodeURIComponent(this.state.id)) //CHANGE before commit\n        this.socket.onopen = () => {\n            console.log(\"socket connected\");\n        }\n\n        this.socket.onclose = () => {\n            console.log('socket closed')\n        }\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data);\n            if (data.color) {\n                this.setState({ online: true, gameId: data.gameId, color: data.color, opponentName: data.opponentName, opponentImageUrl: data.opponentImageUrl })\n            }\n            console.log(data)\n        }\n\n        this.props.setWs({ socket: this.socket });\n    }\n\n    hide = () => {\n        this.setState({ waiting: false })\n        console.log('socket closed')\n        this.socket.close()\n    }\n\n    createGame = () => {\n        this.socket = new WebSocket(\"ws://localhost:8080/create/\" + encodeURIComponent(this.state.id)) //CHANGE before commit\n        this.socket.onopen = () => {\n            console.log(\"socket connected\");\n        }\n\n        this.socket.onclose = () => {\n            console.log('socket closed')\n        }\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data);\n            if (data.type && data.type === 'create') {\n                this.setState({ friends: true, gameId: data.gameId })\n            }\n            console.log(data)\n        }\n\n        this.props.setWs({ socket: this.socket });\n    }\n\n    joinGame = () => {\n\n    }\n\n    render() {\n        const redirect = this.state.gameId && this.state.online ? <Redirect to={{\n            pathname: '/game',\n            state: { \n                gameId: this.state.gameId,\n                color: this.state.color,\n                // userId: this.state.userId,\n                opponentName: this.state.opponentName,\n                opponentImageUrl: this.state.opponentImageUrl\n            }\n        }} /> \n        : this.state.gameId && this.state.online ? <Redirect to={{\n            pathname: '/game',\n            state: { \n                gameId: this.state.gameId,\n                color: this.state.color,\n                // userId: this.state.userId,\n                opponentName: this.state.opponentName,\n                opponentImageUrl: this.state.opponentImageUrl\n            }\n        }} />\n        : null\n        return (\n            \n            <div>\n                {redirect}\n                <UserNavBar />\n                <div className='leftHalf grow' onClick={this.playOnline} >\n                    <div className='imageBox'>\n                        PLAY ONLINE\n                        </div>\n                    <div className='imageBox-text'>\n                        Compete against strangers online\n                    </div>\n                </div>\n\n\n                <div className='rightHalf grow '>\n                    <div className='imageBox'>\n                        PLAY WITH FRIENDS\n                    </div>\n                    <div className='imageBox-text'>\n                        Create or join a room and compete against your friend\n                        <Button onClick={this.createGame} className='button' style={{ backgroundColor: ' rgb(142, 68, 173)', border: '1px solid white', width: '150px', marginTop: '20px' }}>CREATE ROOM</Button>\n                        <Button onClick={this.joinGame} className='button' style={{ backgroundColor: ' rgb(142, 68, 173)', border: '1px solid white', width: '150px', marginTop: '20px' }}>JOIN ROOM</Button>\n                    </div>\n                </div>\n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.waiting}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{ textAlign: \"center\" }}>\n                            <h4 style={{ marginBottom: '20px' }}>Searching for Opponent</h4>\n                            <div>\n                                <Spinner animation=\"border\" variant=\"light\" />\n                            </div>\n                            <Button onClick={this.hide} className='button' style={{ backgroundColor: ' rgb(142, 68, 173)', border: '1px solid white', width: '150px', marginTop: '20px' }}>CANCEL</Button>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setWs: (data) => {\n        const action = {\n            type: 'WS',\n            payload: data\n        }\n        return dispatch(action)\n    },\n    setUser: (data) => {\n        const action = {\n            type: 'SET_USER',\n            payload: data\n        }\n        return dispatch(action)\n    } \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"]},"metadata":{},"sourceType":"module"}