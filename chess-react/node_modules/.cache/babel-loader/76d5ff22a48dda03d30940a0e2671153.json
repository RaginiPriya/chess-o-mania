{"ast":null,"code":"var generateSquares=function generateSquares(reverse){var boardRows=[{label:1,top:reverse?7*12:0*12},{label:2,top:reverse?6*12:1*12},{label:3,top:reverse?5*12:2*12},{label:4,top:reverse?4*12:3*12},{label:5,top:reverse?3*12:4*12},{label:6,top:reverse?2*12:5*12},{label:7,top:reverse?1*12:6*12},{label:8,top:reverse?0*12:7*12}];var boardColumns=[{label:1,left:reverse?7*12:0*12},{label:2,left:reverse?6*12:1*12},{label:3,left:reverse?5*12:2*12},{label:4,left:reverse?4*12:3*12},{label:5,left:reverse?3*12:4*12},{label:6,left:reverse?2*12:5*12},{label:7,left:reverse?1*12:6*12},{label:8,left:reverse?0*12:7*12}];var squares=[];boardRows.forEach(function(row){boardColumns.forEach(function(col){squares.push({row:row.label,column:col.label,topSize:row.top,leftSize:col.left,top:row.top+\"vh\",left:col.left+\"vh\"});});});return squares;};export default generateSquares;","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess api/chess-online/chess-react/src/generateSquares.js"],"names":["generateSquares","reverse","boardRows","label","top","boardColumns","left","squares","forEach","row","col","push","column","topSize","leftSize"],"mappings":"AAAA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAa,CAEjC,GAAMC,CAAAA,SAAS,CAAG,CAChB,CAAEC,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CADgB,CAEhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CAFgB,CAGhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CAHgB,CAIhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CAJgB,CAKhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CALgB,CAMhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CANgB,CAOhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CAPgB,CAQhB,CAAEE,KAAK,CAAE,CAAT,CAAYC,GAAG,CAAEH,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAxC,CARgB,CAAlB,CAWA,GAAMI,CAAAA,YAAY,CAAG,CACnB,CAAEF,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CADmB,CAEnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CAFmB,CAGnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CAHmB,CAInB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CAJmB,CAKnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CALmB,CAMnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CANmB,CAOnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CAPmB,CAQnB,CAAEE,KAAK,CAAE,CAAT,CAAYG,IAAI,CAAEL,OAAO,CAAG,EAAI,EAAP,CAAY,EAAI,EAAzC,CARmB,CAArB,CAWE,GAAMM,CAAAA,OAAO,CAAG,EAAhB,CAEAL,SAAS,CAACM,OAAV,CAAkB,SAACC,GAAD,CAAS,CACvBJ,YAAY,CAACG,OAAb,CAAqB,SAACE,GAAD,CAAS,CAC5BH,OAAO,CAACI,IAAR,CAAa,CACTF,GAAG,CAAGA,GAAG,CAACN,KADD,CAETS,MAAM,CAAGF,GAAG,CAACP,KAFJ,CAGTU,OAAO,CAAEJ,GAAG,CAACL,GAHJ,CAITU,QAAQ,CAAEJ,GAAG,CAACJ,IAJL,CAKTF,GAAG,CAAGK,GAAG,CAACL,GAAJ,CAAQ,IALL,CAMTE,IAAI,CAAGI,GAAG,CAACJ,IAAJ,CAAS,IANP,CAAb,EAQD,CATD,EAUH,CAXD,EAYA,MAAOC,CAAAA,OAAP,CACL,CAvCD,CAwCA,cAAeP,CAAAA,eAAf","sourcesContent":["const generateSquares = (reverse) => {\n\n    const boardRows = [\n      { label: 1, top: reverse ? 7 * 12 : 0 * 12 },\n      { label: 2, top: reverse ? 6 * 12 : 1 * 12 },\n      { label: 3, top: reverse ? 5 * 12 : 2 * 12 },\n      { label: 4, top: reverse ? 4 * 12 : 3 * 12 },\n      { label: 5, top: reverse ? 3 * 12 : 4 * 12 },\n      { label: 6, top: reverse ? 2 * 12 : 5 * 12 },\n      { label: 7, top: reverse ? 1 * 12 : 6 * 12 },\n      { label: 8, top: reverse ? 0 * 12 : 7 * 12 },\n    ];\n    \n    const boardColumns = [\n      { label: 1, left: reverse ? 7 * 12 : 0 * 12 },\n      { label: 2, left: reverse ? 6 * 12 : 1 * 12 },\n      { label: 3, left: reverse ? 5 * 12 : 2 * 12 },\n      { label: 4, left: reverse ? 4 * 12 : 3 * 12 },\n      { label: 5, left: reverse ? 3 * 12 : 4 * 12 },\n      { label: 6, left: reverse ? 2 * 12 : 5 * 12 },\n      { label: 7, left: reverse ? 1 * 12 : 6 * 12 },\n      { label: 8, left: reverse ? 0 * 12 : 7 * 12 },\n    ];\n\n      const squares = [];\n\n      boardRows.forEach((row) => {\n          boardColumns.forEach((col) => {\n            squares.push({\n                row : row.label,\n                column : col.label,\n                topSize: row.top,\n                leftSize: col.left,\n                top : row.top+\"vh\",\n                left : col.left+\"vh\"\n            });\n          })\n      })\n      return squares\n}\nexport default generateSquares"]},"metadata":{},"sourceType":"module"}