{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Documents/chess/chess-react/src/Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Modal, Spinner, Button } from 'react-bootstrap';\nimport UserNavBar from './UserNavBar';\nimport chess from './chess1.jpg';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameId: null,\n      waiting: false,\n      color: null\n    };\n\n    this.playOnline = () => {\n      this.setState({\n        waiting: true\n      });\n      console.log(this.props.user);\n      this.socket = new WebSocket(\"ws://localhost:8080/online/\" + encodeURIComponent(this.props.user.email)); //CHANGE before commit\n\n      this.socket.onopen = () => {\n        console.log(\"socket connected\");\n      };\n\n      this.socket.onclose = () => {\n        console.log('socket closed');\n      };\n\n      this.socket.onmessage = input => {\n        var data = JSON.parse(input.data);\n\n        if (data.color) {\n          this.setState({\n            gameId: data.gameId,\n            color: data.color\n          });\n        }\n\n        console.log(data);\n      };\n\n      this.props.setWs({\n        socket: this.socket\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        waiting: false\n      });\n      console.log('socket closed');\n      this.socket.close();\n    };\n  }\n\n  render() {\n    const redirect = this.state.gameId ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/game',\n        state: {\n          gameId: this.state.gameId,\n          color: this.state.color,\n          userId: this.state.userId\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 46\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, redirect, /*#__PURE__*/React.createElement(UserNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftHalf grow\",\n      onClick: this.playOnline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"PLAY ONLINE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Compete against strangers online\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightHalf grow \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"PLAY WITH FRIENDS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Create or join a room and compete against your friend\")), /*#__PURE__*/React.createElement(Modal, {\n      backdrop: \"static\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      keyboard: false,\n      show: this.state.waiting,\n      onHide: this.hide,\n      className: \"my-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      hidden: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Searching for Opponent\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.hide,\n      className: \"button\",\n      style: {\n        backgroundColor: ' rgb(142, 68, 173)',\n        border: '1px solid white',\n        width: '150px',\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"CANCEL\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWs: data => {\n    const action = {\n      type: 'WS',\n      payload: data\n    };\n    return dispatch(action);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess-react/src/Home.js"],"names":["React","Component","Container","Row","Modal","Spinner","Button","UserNavBar","chess","connect","Redirect","Home","state","gameId","waiting","color","playOnline","setState","console","log","props","user","socket","WebSocket","encodeURIComponent","email","onopen","onclose","onmessage","input","data","JSON","parse","setWs","hide","close","render","redirect","pathname","userId","textAlign","marginBottom","backgroundColor","border","width","marginTop","mapStateToProps","userReducer","mapDispatchToProps","dispatch","action","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Modal, Spinner, Button } from 'react-bootstrap'\nimport UserNavBar from './UserNavBar'\nimport chess from './chess1.jpg'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Home extends Component {\n    state = {\n        gameId: null,\n        waiting: false,\n        color: null\n    }\n\n    playOnline = () => {\n        this.setState({ waiting: true });\n        console.log(this.props.user)\n        this.socket = new WebSocket(\"ws://localhost:8080/online/\" + encodeURIComponent(this.props.user.email)) //CHANGE before commit\n        this.socket.onopen = () => {\n            console.log(\"socket connected\");\n        }\n\n        this.socket.onclose = () => {\n            console.log('socket closed')\n        }\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data);\n            if (data.color) {\n                this.setState({ gameId: data.gameId, color: data.color })\n            }\n            console.log(data)\n        }\n\n        this.props.setWs({ socket: this.socket });\n    }\n\n    hide = () => {\n        this.setState({ waiting: false })\n        console.log('socket closed')\n        this.socket.close()\n    }\n\n    render() {\n        const redirect = this.state.gameId ? <Redirect to={{\n            pathname: '/game',\n            state: { \n                gameId: this.state.gameId,\n                color: this.state.color,\n                userId: this.state.userId\n            }\n        }} /> :null\n        return (\n            \n            <div>\n                {redirect}\n                <UserNavBar />\n                <div className='leftHalf grow' onClick={this.playOnline} >\n                    <div className='imageBox'>\n                        PLAY ONLINE\n                        </div>\n                    <div className='imageBox-text'>\n                        Compete against strangers online\n                    </div>\n                </div>\n\n\n                <div className='rightHalf grow '>\n                    <div className='imageBox'>\n                        PLAY WITH FRIENDS\n                    </div>\n                    <div className='imageBox-text'>\n                        Create or join a room and compete against your friend\n                    </div>\n                </div>\n                <Modal backdrop=\"static\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    keyboard={false}\n                    show={this.state.waiting}\n                    onHide={this.hide}\n                    className=\"my-modal\"\n                >\n                    <Modal.Header closeButton hidden=\"true\"></Modal.Header>\n                    <Modal.Body>\n                        <div style={{ textAlign: \"center\" }}>\n                            <h4 style={{ marginBottom: '20px' }}>Searching for Opponent</h4>\n                            <div>\n                                <Spinner animation=\"border\" variant=\"dark\" />\n                            </div>\n                            <Button onClick={this.hide} className='button' style={{ backgroundColor: ' rgb(142, 68, 173)', border: '1px solid white', width: '150px', marginTop: '20px' }}>CANCEL</Button>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setWs: (data) => {\n        const action = {\n            type: 'WS',\n            payload: data\n        }\n        return dispatch(action)\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"]},"metadata":{},"sourceType":"module"}