{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Documents/chess/chess-react/src/Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport UserNavBar from './UserNavBar';\nimport chess from './chess1.jpg';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameId: null,\n      waiting: false,\n      color: null\n    };\n\n    this.playOnline = () => {\n      this.setState({\n        waiting: true\n      });\n      console.log(this.props.user);\n      this.socket = new WebSocket(\"ws://localhost:8080/online/\" + encodeURIComponent(this.props.user.email)); //CHANGE before commit\n\n      this.socket.onopen = () => {\n        console.log(\"socket connected\");\n      };\n\n      this.socket.onclose = () => {\n        console.log('socket closed');\n      };\n\n      this.socket.onmessage = input => {\n        var data = JSON.parse(input.data);\n\n        if (data.color) {\n          this.setState({\n            gameId: data.gameId,\n            color: data.color\n          });\n        }\n      };\n\n      this.props.setWs({\n        socket: this.socket\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UserNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftHalf grow\",\n      onClick: this.playOnline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"PLAY ONLINE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Compete against strangers online\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightHalf grow \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"PLAY WITH FRIENDS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Create or join a room and compete against your friend\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWs: data => {\n    const action = {\n      type: 'WS',\n      payload: data\n    };\n    return dispatch(action);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess-react/src/Home.js"],"names":["React","Component","Container","Row","UserNavBar","chess","connect","Home","state","gameId","waiting","color","playOnline","setState","console","log","props","user","socket","WebSocket","encodeURIComponent","email","onopen","onclose","onmessage","input","data","JSON","parse","setWs","render","mapStateToProps","userReducer","mapDispatchToProps","dispatch","action","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport UserNavBar from './UserNavBar'\nimport chess from './chess1.jpg'\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n    state = {\n        gameId : null,\n        waiting : false,\n        color : null\n    }\n\n    playOnline = () => {\n        this.setState({waiting: true});\n        console.log(this.props.user)\n        this.socket = new WebSocket(\"ws://localhost:8080/online/\"+encodeURIComponent(this.props.user.email)) //CHANGE before commit\n        this.socket.onopen = () => {\n            console.log(\"socket connected\");\n        }\n\n        this.socket.onclose = () => {\n            console.log('socket closed')\n        }\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data);\n            if(data.color){\n                this.setState({gameId: data.gameId, color: data.color})\n            }\n        }\n\n        this.props.setWs({socket: this.socket});\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <Container> */}\n                {/* <Row> */}\n                <UserNavBar />\n                {/* </Row> */}\n                {/* <Row> */}\n                <div className='leftHalf grow' onClick={this.playOnline} >\n                    <div className='imageBox'>\n                        PLAY ONLINE\n                        </div>\n                    <div className='imageBox-text'>\n                        Compete against strangers online\n                    </div>\n                </div>\n\n\n                <div className='rightHalf grow '>\n                    <div className='imageBox'>\n                        PLAY WITH FRIENDS\n                    </div>\n                    <div className='imageBox-text'>\n                        Create or join a room and compete against your friend\n                    </div>\n                </div>\n                {/* </Row> */}\n                {/* </Container> */}\n\n\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setWs: (data) => {\n        const action = {\n            type: 'WS',\n            payload: data\n        }\n        return dispatch(action)\n    } \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"]},"metadata":{},"sourceType":"module"}