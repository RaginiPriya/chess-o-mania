{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Documents/chess/chess-react/src/WaitingGameRoom.js\";\nimport React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport whiteKing from './images/white_king.png';\nimport blackKing from './images/black_king.png';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass WaitingGameRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      otherPlayerName: null,\n      redirect: false\n    };\n\n    this.goToGame = () => {\n      this.socket.send(JSON.stringify({\n        \"type\": \"ready\"\n      }));\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.copyToClipboard = e => {\n      this.gameId.select();\n      document.execCommand('copy');\n      e.target.focus();\n    };\n\n    this.gameId = React.createRef();\n  }\n\n  componentDidMount() {\n    this.socket = new WebSocket(\"ws://localhost:8000/room?userId=\" + this.props.location.state.playerName + \"&gameId=\" + this.props.location.state.gameId);\n\n    this.socket.onopen = () => {\n      console.log(\"socket connected\");\n    };\n\n    this.socket.onclose = () => {\n      console.log('socket closed');\n    };\n\n    this.socket.onmessage = input => {\n      var data = JSON.parse(input.data);\n\n      if (data.opponent) {\n        this.setState({\n          otherPlayerName: data.opponent\n        });\n      } else if (data.type === 'opponentLeft') {\n        this.setState({\n          otherPlayerName: null\n        });\n      } else if (data.type === 'ready') {\n        this.setState({\n          redirect: true\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, this.state.redirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/game',\n        state: {\n          gameId: this.props.location.state.gameId,\n          color: this.props.location.state.color,\n          userId: this.props.location.state.playerName,\n          player2: this.state.otherPlayerName\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 43\n      }\n    }) : null, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"waitingRoomText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: this.props.location.state.gameId,\n      \"aria-label\": this.props.location.state.gameId,\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary light\",\n      onClick: () => {\n        navigator.clipboard.writeText(this.props.location.state.gameId);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"COPY\"))), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Share this GAME ID with your friends and ask them to join\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftHalf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imageBorder\",\n      src: whiteKing,\n      alt: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, this.props.location.state.color === 'white' ? this.props.location.state.playerName : this.state.otherPlayerName === null ? 'Waiting for friend ...' : this.state.otherPlayerName))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightHalf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imageBorder\",\n      src: blackKing,\n      alt: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, this.props.location.state.color === 'black' ? this.props.location.state.playerName : this.state.otherPlayerName === null ? 'Waiting for friend ...' : this.state.otherPlayerName))), this.state.otherPlayerName !== null && this.props.location.state.color === 'white' ? /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      style: {\n        marginBottom: '10vh',\n        width: '250px',\n        left: '40%',\n        color: 'white',\n        bottom: '10vh',\n        position: 'fixed',\n        border: '1px solid black',\n        backgroundColor: 'grey'\n      },\n      onClick: this.goToGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"START GAME\") : null, this.state.otherPlayerName !== null && this.props.location.state.color === 'black' ? /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"startText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Your friend will start the game\") : null);\n  }\n\n}\n\nexport default WaitingGameRoom;","map":{"version":3,"sources":["/Users/ragir/Documents/chess/chess-react/src/WaitingGameRoom.js"],"names":["React","Component","NavBar","whiteKing","blackKing","Button","FormControl","InputGroup","Redirect","connect","WaitingGameRoom","constructor","props","state","otherPlayerName","redirect","goToGame","socket","send","JSON","stringify","setState","copyToClipboard","e","gameId","select","document","execCommand","target","focus","createRef","componentDidMount","WebSocket","location","playerName","onopen","console","log","onclose","onmessage","input","data","parse","opponent","type","componentWillUnmount","close","render","pathname","color","userId","player2","navigator","clipboard","writeText","marginBottom","width","left","bottom","position","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NavBar from './NavBar'\nimport whiteKing from './images/white_king.png';\nimport blackKing from './images/black_king.png'\nimport {Button, FormControl, InputGroup} from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nclass WaitingGameRoom extends Component {\n    state = {\n        otherPlayerName: null,\n        redirect : false\n    }\n\n    constructor(props){\n        super(props);\n        this.gameId = React.createRef();\n    }\n\n    goToGame = () => {\n        this.socket.send(JSON.stringify({\"type\":\"ready\"}))\n        this.setState({redirect: true})\n    }\n\n    componentDidMount () {\n        this.socket = new WebSocket(\"ws://localhost:8000/room?userId=\"+this.props.location.state.playerName+\"&gameId=\"+this.props.location.state.gameId)\n        this.socket.onopen = () => {\n            console.log(\"socket connected\");\n        }\n\n        this.socket.onclose = () => {\n            console.log('socket closed')    \n        }\n\n        this.socket.onmessage = (input) => {\n            var data = JSON.parse(input.data);\n            if(data.opponent){\n                this.setState({otherPlayerName: data.opponent})\n            }\n            else if(data.type === 'opponentLeft'){\n                this.setState({otherPlayerName: null})\n            }\n            else if(data.type === 'ready'){\n                this.setState({redirect: true})\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.socket.close();         \n    }\n\n    copyToClipboard = (e) => {\n        this.gameId.select();\n        document.execCommand('copy');\n        e.target.focus();\n    };\n\n    render () {\n        return (\n            <div>\n                { \n                    this.state.redirect ? <Redirect to={{\n                        pathname: '/game',\n                        state: { \n                            gameId: this.props.location.state.gameId,\n                            color: this.props.location.state.color,\n                            userId: this.props.location.state.playerName,\n                            player2: this.state.otherPlayerName\n                        }\n                    }} /> :null\n                }\n                    \n                <NavBar />\n                    \n                <div className='waitingRoomText'>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder={this.props.location.state.gameId}\n                            aria-label={this.props.location.state.gameId}\n                            aria-describedby=\"basic-addon2\"\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"outline-secondary light\" onClick={() => {navigator.clipboard.writeText(this.props.location.state.gameId)}}>COPY</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <h4 style={{color:'white'}}>Share this GAME ID with your friends and ask them to join</h4>\n                </div>\n        \n                <div className='leftHalf'>\n                    <div className='imageBox'>\n                        <img className='imageBorder' src={whiteKing} alt=\"white\" />\n                        <h3 style={{color:'white'}}>{this.props.location.state.color === 'white' ? this.props.location.state.playerName : this.state.otherPlayerName === null ?'Waiting for friend ...' : this.state.otherPlayerName}</h3>\n                    </div>\n                </div>\n\n                <div className='rightHalf'>\n                    <div className='imageBox'>\n                        <img className='imageBorder' src={blackKing} alt=\"white\" />\n                        <h3 style={{color:'white'}}>{this.props.location.state.color === 'black' ? this.props.location.state.playerName : this.state.otherPlayerName === null ?'Waiting for friend ...' : this.state.otherPlayerName}</h3>\n                    </div>\n                </div>\n\n                {                    \n                    this.state.otherPlayerName !== null && this.props.location.state.color === 'white' ?\n                        <Button className='button' style={{\n                            marginBottom: '10vh',\n                            width: '250px',\n                            left: '40%',\n                            color: 'white',\n                            bottom: '10vh',\n                            position: 'fixed',\n                            border: '1px solid black',\n                            backgroundColor: 'grey'}} onClick={this.goToGame}>START GAME</Button>\n                        :null\n                }\n                {\n                    this.state.otherPlayerName !== null && this.props.location.state.color === 'black' ?\n                        <h3 className='startText'>Your friend will start the game</h3>\n                        :null\n                }\n            </div>\n        )\n    }\n}\n\nexport default WaitingGameRoom"]},"metadata":{},"sourceType":"module"}